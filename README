                                                Monster Hunter World:Iceborne Mod Manager Command Line Tool

Why am I write this application?
        Just interesting.

User Interface :
        > mhwimmc
        mhwimmc: Monster Hunter World:Iceborne Mod Manager
        mhwimmc: cd [ path ]
        mhwimmc: ls

                file
                file
                ...
        mhwimmc: install [ mod name ] [ mod's relative path ]
        mhwimmc: uninstall [ mod name ]
        mhwimmc: installed
                <mod name>
                ...
        mhwimmc: exit
        ...

Mod record :
        sqlite table record format :
        [ mod_name ] [ file_path ] [ install_date ] [ unused_id ]
                                                      |
                                                      +--> as primary key(auto inc)

Module :
        UI
         > interactive with user
        Executor
         > process command from user and interactive with database
        Database
         > record mod install history

Command :
        cd <path>
         => change current work directory
        pwd
         => get current work directory
        ls
         => list current work directory
        install <mod name without space> <mod directory - relative path - without space>
         => install a mod
        installed
         => query what mods been installed
        uninstall <mod name without space>
         => uninstall a mod
        get_config <key>
         => get config value of @key
        config <key>=<value>
         => set config option
        exit
         => exit application
        commands
         => print all commands'descriptions
        help
         => implemented as @commands

Config :
        USERHOME => current user's home
        MHWIROOT => path to install directory of the game
        MHWIMMROOT => this application's config directory

Thread :
        UI thread worker
        Executor thread worker
        Database thread worker

Program exit :
        a global indicator named @program_exit is introduced for tell each threads
        should stop and exit

Signal :
        SIGINT  => blocked
        SIGTERM => blocked

Development Environment :
        Language >
                C/C++
        Compiler >
                gcc/g++ 10.3.0
        GNU/libc >
                glibc 2.31
        Kernel version >
                linux 5.4.32
        Database >
                sqlite3
